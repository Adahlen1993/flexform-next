generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid())
  email        String      @unique
  username     String      @unique     // ðŸ‘ˆ this must exist
  password     String
  firstName    String
  lastName     String
  dateOfBirth  DateTime
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  workouts     Workout[]
  settings     UserSettings?
  weightLogs   WeightLog[]
}



model UserSettings {
  id          String   @id @default(uuid())
  userId      String   @unique
  weightUnit  String   // "lbs" or "kg"
  goal        String?

  user        User     @relation(fields: [userId], references: [id])
}

model WeightLog {
  id        String   @id @default(uuid())
  userId    String
  weight    Float
  loggedAt  DateTime @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])
}



model Workout {
  id        String   @id @default(uuid())
  userId    String
  date      DateTime
  note      String?

  user      User     @relation(fields: [userId], references: [id])
  exercises WorkoutExercise[]
}

model WorkoutExercise {
  id         String   @id @default(uuid())
  workoutId  String
  name       String
  sets       Set[]

  workout    Workout  @relation(fields: [workoutId], references: [id])
}

model Set {
  id              String   @id @default(uuid())
  workoutExerciseId String
  reps            Int
  weight          Float

  exercise        WorkoutExercise @relation(fields: [workoutExerciseId], references: [id])
}
